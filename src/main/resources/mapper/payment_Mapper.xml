<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.goott.trip.hamster.mapper.paymentMapper">

    <insert id="airplanePay" parameterType="Payment">
        INSERT INTO payment (order_uuid, member_id, air_key, call_first_name, call_last_name, call_country, call_email, call_number,ride_first_name,
                             ride_last_name,ride_birth,ride_country,ride_passport,ride_passport_country,ride_passport_exdate, order_time,status,payment_key)
        VALUES (#{orderUuid}, #{memberId}, #{airKey}, #{callFirstName}, #{callLastName}, #{callCountry}, #{callEmail}, #{callNumber},#{rideFirstNameStr},
                #{rideLastNameStr},#{rideBirthStr},#{rideCountryStr},#{ridePassportStr},#{ridePassportCountryStr},#{ridePassportExdateStr},Now(),#{status},#{paymentKey})
    </insert>

    <insert id="hotelPay" parameterType="String">
        INSERT INTO payment (order_uuid, member_id, call_first_name, call_last_name, call_country, call_email, order_time,status,payment_key)
        VALUES (#{UUID}, #{memId}, #{firstName}, #{lastName}, #{country}, #{email}, Now(),'ready',#{paymentKey})
    </insert>

    <insert id="insertHotel" parameterType="String">
        UPDATE con_hotel_cart
        SET order_uuid = #{UUID}
        WHERE uuid = #{cartUUID} AND member_id = #{memId}
    </insert>

    <!--VIP-->
    <update id="updateTicketStatus">
        UPDATE payment
        SET status = #{status}
        WHERE air_key = #{airKey}
    </update>

    <update id="updateTicketStatusByOrderUuid">
        UPDATE payment
        SET status = #{status}
        WHERE order_uuid = #{orderUuid}
    </update>

    <select id="findAllPayments" resultType="Payment">
        SELECT * FROM payment
    </select>

    <select id="findByMemberId" parameterType="String" resultType="Payment">
        SELECT * FROM payment
        WHERE member_id = #{memberId}
    </select>

    <!--예약-->
    <select id="payAir" parameterType="String" resultType="Payment">
        SELECT * FROM payment
        WHERE air_key IS NOT NULL AND member_id = #{memberId}
    </select>

    <select id="payHotel" parameterType="String" resultType="Payment">
        SELECT * FROM payment
        WHERE air_key IS NULL AND member_id = #{memberId}
    </select>

    <select id="getPaymentAirKey" parameterType="String" resultType="String">
        select air_key from payment where member_id = #{memberId}
    </select>

    <select id="findByAirKey" parameterType="String" resultType="Payment">
        SELECT
            order_uuid,
            member_id,
            air_key,
            hotel_id_key,
            hotel_cont_key,
            cr_img_key,
            call_first_name,
            call_last_name,
            call_country,
            call_email,
            call_number,
            ride_first_name AS ride_first_name_str,
            ride_last_name AS ride_last_name_str,
            ride_birth AS ride_birth_str,
            ride_country AS ride_country_str,
            ride_passport AS ride_passport_str,
            ride_passport_country AS ride_passport_country_str,
            ride_passport_exdate AS ride_passport_exdate_str,
            guest_first_name,
            guest_last_name,
            guest_country,
            order_time,
            status,
            payment_key
        FROM payment
        WHERE air_key = #{AirKey}
    </select>
</mapper>
